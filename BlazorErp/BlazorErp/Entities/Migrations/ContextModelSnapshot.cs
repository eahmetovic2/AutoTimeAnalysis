// <auto-generated />
using System;
using BlazorErp.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BlazorErp.Entities.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BlazorErp.Entities.Models.Base.Dokument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Naziv")
                        .HasColumnType("text");

                    b.Property<string>("Putanja")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Dokumenti");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Base.LogAkcija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Akcija")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DatumAkcije")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Kategorija")
                        .HasColumnType("integer");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Opis")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("LogAkcije");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Base.LogEntitet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DatumAkcije")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Entitet")
                        .HasColumnType("integer");

                    b.Property<int>("EntitetId")
                        .HasColumnType("integer");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("integer");

                    b.Property<string>("Vrijednost")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("LogEntiteti");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Base.Postavke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("NaslovSistema")
                        .IsRequired()
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.Property<int>("TrajanjeSesije")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Postavke");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.IdentityKorisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("PunoIme")
                        .IsRequired()
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.KorisnikUloga", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.KorisnikUlogaDodatnaInformacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("integer");

                    b.Property<int>("KorisnikTipDodatneInformacijeId")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("UlogaId")
                        .HasColumnType("integer");

                    b.Property<int>("Vrijednost")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikTipDodatneInformacijeId");

                    b.HasIndex("KorisnikId", "UlogaId");

                    b.ToTable("KorisnikUlogaDodatneInformacije");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.Modul", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Naziv")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Opis")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Sifra")
                        .HasColumnType("character varying(45)")
                        .HasMaxLength(45);

                    b.HasKey("Id");

                    b.HasIndex("Sifra")
                        .IsUnique();

                    b.ToTable("Moduli");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.PravoAkcija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Naziv")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Opis")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("PravoObjekatId")
                        .HasColumnType("integer");

                    b.Property<int>("PravoObjektId")
                        .HasColumnType("integer");

                    b.Property<string>("Sifra")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("PravoObjekatId");

                    b.HasIndex("Sifra")
                        .IsUnique();

                    b.ToTable("PravoAkcije");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.PravoAkcijaUloga", b =>
                {
                    b.Property<int>("PravoAkcijaId")
                        .HasColumnType("integer");

                    b.Property<int>("UlogaId")
                        .HasColumnType("integer");

                    b.HasKey("PravoAkcijaId", "UlogaId");

                    b.HasIndex("UlogaId");

                    b.ToTable("PravoAkcijaUloge");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.PravoGrupa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Naziv")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Opis")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Sifra")
                        .HasColumnType("character varying(45)")
                        .HasMaxLength(45);

                    b.HasKey("Id");

                    b.HasIndex("Sifra")
                        .IsUnique();

                    b.ToTable("PravoGrupe");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.PravoObjekat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("ModulId")
                        .HasColumnType("integer");

                    b.Property<string>("Naziv")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("PravoGrupaId")
                        .HasColumnType("integer");

                    b.Property<string>("Sifra")
                        .HasColumnType("character varying(45)")
                        .HasMaxLength(45);

                    b.HasKey("Id");

                    b.HasIndex("ModulId");

                    b.HasIndex("PravoGrupaId");

                    b.HasIndex("Sifra")
                        .IsUnique();

                    b.ToTable("PravoObjekti");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.PravoUpravljanjaKorisnikom", b =>
                {
                    b.Property<int>("UlogaUpraviteljaId")
                        .HasColumnType("integer");

                    b.Property<int>("UlogaUpravljanogId")
                        .HasColumnType("integer");

                    b.HasKey("UlogaUpraviteljaId", "UlogaUpravljanogId");

                    b.HasIndex("UlogaUpravljanogId");

                    b.ToTable("PravaUpravljanjaKorisnicima");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.Token", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DatumIsteka")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DatumPosljednjeAkcije")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PosljednjiIp")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PosljednjiKlijent")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<int>("Tip")
                        .HasColumnType("integer");

                    b.Property<int>("UlogaId")
                        .HasColumnType("integer");

                    b.Property<int>("VlasnikId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UlogaId");

                    b.HasIndex("VlasnikId");

                    b.ToTable("Tokeni");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.Uloga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<int>("Poredak")
                        .HasColumnType("integer");

                    b.Property<int?>("VrijednostUAplikaciji")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.UlogaTipDodatneInformacije", b =>
                {
                    b.Property<int>("UlogaId")
                        .HasColumnType("integer");

                    b.Property<int>("KorisnikTipDodatneInformacijeId")
                        .HasColumnType("integer");

                    b.HasKey("UlogaId", "KorisnikTipDodatneInformacijeId");

                    b.HasIndex("KorisnikTipDodatneInformacijeId");

                    b.ToTable("UlogaTipoviDodatneInformacije");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Sifarnik.KorisnikTipDodatneInformacije", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Naziv")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("Onemogucen")
                        .HasColumnType("boolean");

                    b.Property<string>("Opis")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Poredak")
                        .HasColumnType("integer");

                    b.Property<string>("Sifra")
                        .HasColumnType("character varying(45)")
                        .HasMaxLength(45);

                    b.HasKey("Id");

                    b.ToTable("KorisnikTipoviDodatneInformacije");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Sifarnik.LogKategorija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("Poredak")
                        .HasColumnType("integer");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VrijednostUAplikaciji")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("LogKategorije");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Sifarnik.LogLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("Poredak")
                        .HasColumnType("integer");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VrijednostUAplikaciji")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("LogLeveli");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Sifarnik.VrstaLogAkcija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("Poredak")
                        .HasColumnType("integer");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VrijednostUAplikaciji")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("VrsteLogAkcija");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("text");

                    b.Property<string>("ClientId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<string>("DeviceCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SubjectId")
                        .HasColumnType("text");

                    b.HasKey("UserCode");

                    b.ToTable("DeviceFlowCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<string>("ClientId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SubjectId")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Key");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Base.LogAkcija", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Korisnik.IdentityKorisnik", "Korisnik")
                        .WithMany("LogAkcije")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Base.LogEntitet", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Korisnik.IdentityKorisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.KorisnikUloga", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Korisnik.Uloga", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BlazorErp.Entities.Models.Korisnik.IdentityKorisnik", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.KorisnikUlogaDodatnaInformacija", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Sifarnik.KorisnikTipDodatneInformacije", "KorisnikTipDodatneInformacije")
                        .WithMany()
                        .HasForeignKey("KorisnikTipDodatneInformacijeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorErp.Entities.Models.Korisnik.KorisnikUloga", "KorisnikUloga")
                        .WithMany("KorisnikUlogaDodatnaInformacija")
                        .HasForeignKey("KorisnikId", "UlogaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.PravoAkcija", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Korisnik.PravoObjekat", "PravoObjekat")
                        .WithMany("PravoAkcije")
                        .HasForeignKey("PravoObjekatId");
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.PravoAkcijaUloga", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Korisnik.PravoAkcija", "PravoAkcija")
                        .WithMany("PravoAkcijaUloge")
                        .HasForeignKey("PravoAkcijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorErp.Entities.Models.Korisnik.Uloga", "Uloga")
                        .WithMany("PravoAkcijaUloge")
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.PravoObjekat", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Korisnik.Modul", "Modul")
                        .WithMany("PravoObjekti")
                        .HasForeignKey("ModulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorErp.Entities.Models.Korisnik.PravoGrupa", "PravoGrupa")
                        .WithMany("PravoObjekti")
                        .HasForeignKey("PravoGrupaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.PravoUpravljanjaKorisnikom", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Korisnik.Uloga", "UlogaUpravitelja")
                        .WithMany("PravaUpravljanja")
                        .HasForeignKey("UlogaUpraviteljaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BlazorErp.Entities.Models.Korisnik.Uloga", "UlogaUpravljanog")
                        .WithMany("PravaUpravljanosti")
                        .HasForeignKey("UlogaUpravljanogId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.Token", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Korisnik.Uloga", "Uloga")
                        .WithMany()
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorErp.Entities.Models.Korisnik.IdentityKorisnik", "Vlasnik")
                        .WithMany()
                        .HasForeignKey("VlasnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorErp.Entities.Models.Korisnik.UlogaTipDodatneInformacije", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Sifarnik.KorisnikTipDodatneInformacije", "KorisnikTipDodatneInformacije")
                        .WithMany("TipoviDodatneInformacije")
                        .HasForeignKey("KorisnikTipDodatneInformacijeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorErp.Entities.Models.Korisnik.Uloga", "Uloga")
                        .WithMany("TipoviDodatneInformacije")
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Korisnik.Uloga", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Korisnik.IdentityKorisnik", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Korisnik.IdentityKorisnik", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("BlazorErp.Entities.Models.Korisnik.IdentityKorisnik", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
