@page "/register"
@layout NoNavLayout
@using BlazorErp.Shared.Request.Korisnik
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="d-flex justify-content-center">
    <div class="col-md-5">
        <h1>Register</h1>

        @if (ShowErrors)
        {
            <div class="alert alert-danger" role="alert">
                @foreach (var error in Errors)
                {
                    <p>@error</p>
                }
            </div>
        }

        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Please enter your details</h5>
                <EditForm Model="registerModel" OnValidSubmit="HandleRegistration">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="email">Email address</label>
                        <InputText Id="email" Class="form-control" @bind-Value="registerModel.Email" />
                        <ValidationMessage For="@(() => registerModel.Email)" />
                    </div>
                    <div class="form-group">
                        <label for="password">Password</label>
                        <InputText Id="password" Class="form-control" @bind-Value="registerModel.Password" />
                        <ValidationMessage For="@(() => registerModel.Password)" />
                    </div>
                    <div class="form-group">
                        <label for="password">Confirm Password</label>
                        <InputText Id="password" Class="form-control" @bind-Value="registerModel.ConfirmPassword" />
                        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {

    private RegisterModel registerModel = new RegisterModel();
    private bool ShowErrors;
    private IEnumerable<string> Errors;

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await AuthService.Register(registerModel);

        if (result?.Successful ?? false)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Errors = result?.Errors ?? new List<string>() { "Ne valja!" };
            ShowErrors = true;
        }
    }

}
